return {
	"ggandor/leap.nvim",
	dependencies = { "tpope/vim-repeat" },
	config = function()
		require("leap").setup({
			labels = {
				-- Singl-charactr labels
				"a",
				"s",
				"d",
				"w",
				"q",
				"e",
				"r",
				"f",
				"j",
				"k",
				"l",
				"h",
				"n",
				"m",
				"v",
				"c",
				"1",
				"2",
				"3",
				"4",
				"5",
				-- Double-character labels (easy-to-press combinations)
				"aa",
				"ss",
				"dd",
				"ww",
				"qq",
				"ee",
				"rr",
				"ff",
				"jj",
				"kk",
				"ll",
				"hh",
				"nn",
				"mm",
				"vv",
				"cc",
				"zz",
				"xx",
				"as",
				"aw",
				"aq",
				"ae",
				"ar",
				"af",
				"aj",
				"ak",
				"al",
				"ah",
				"an",
				"am",
				"av",
				"ac",
				"az",
				"ax",
				"sa",
				"sw",
				"sq",
				"se",
				"sr",
				"sf",
				"sj",
				"sk",
				"sl",
				"sh",
				"sn",
				"sm",
				"sv",
				"sc",
				"sz",
				"sx",
				"wa",
				"ws",
				"wq",
				"we",
				"wr",
				"wf",
				"wj",
				"wk",
				"wl",
				"wh",
				"wn",
				"wm",
				"wv",
				"wc",
				"wz",
				"wx",
				"qa",
				"qs",
				"qw",
				"qe",
				"qr",
				"qf",
				"qj",
				"qk",
				"ql",
				"qh",
				"qn",
				"qm",
				"qv",
				"qc",
				"qz",
				"qx",
				"ea",
				"es",
				"ew",
				"eq",
				"er",
				"ef",
				"ej",
				"ek",
				"el",
				"eh",
				"en",
				"em",
				"ev",
				"ec",
				"ez",
				"ex",
				"ra",
				"rs",
				"rw",
				"rq",
				"re",
				"rf",
				"rj",
				"rk",
				"rl",
				"rh",
				"rn",
				"rm",
				"rv",
				"rc",
				"rz",
				"rx",
				"fa",
				"fs",
				"fw",
				"fq",
				"fe",
				"fr",
				"fj",
				"fk",
				"fl",
				"fh",
				"fn",
				"fm",
				"fv",
				"fc",
				"fz",
				"fx",
				"ja",
				"js",
				"jw",
				"jq",
				"je",
				"jr",
				"jf",
				"jk",
				"jl",
				"jh",
				"jn",
				"jm",
				"jv",
				"jc",
				"jz",
				"jx",
				"ka",
				"ks",
				"kw",
				"kq",
				"ke",
				"kr",
				"kf",
				"kj",
				"kl",
				"kh",
				"kn",
				"km",
				"kv",
				"kc",
				"kz",
				"kx",
				"la",
				"ls",
				"lw",
				"lq",
				"le",
				"lr",
				"lf",
				"lj",
				"lk",
				"lh",
				"ln",
				"lm",
				"lv",
				"lc",
				"lz",
				"lx",
				"ha",
				"hs",
				"hw",
				"hq",
				"he",
				"hr",
				"hf",
				"hj",
				"hk",
				"hl",
				"hn",
				"hm",
				"hv",
				"hc",
				"hz",
				"hx",
				"na",
				"ns",
				"nw",
				"nq",
				"ne",
				"nr",
				"nf",
				"nj",
				"nk",
				"nl",
				"nh",
				"nm",
				"nv",
				"nc",
				"nz",
				"nx",
				"ma",
				"ms",
				"mw",
				"mq",
				"me",
				"mr",
				"mf",
				"mj",
				"mk",
				"ml",
				"mh",
				"mn",
				"mv",
				"mc",
				"mz",
				"mx",
				"va",
				"vs",
				"vw",
				"vq",
				"ve",
				"vr",
				"vf",
				"vj",
				"vk",
				"vl",
				"vh",
				"vn",
				"vm",
				"vc",
				"vz",
				"vx",
				"ca",
				"cs",
				"cw",
				"cq",
				"ce",
				"cr",
				"cf",
				"cj",
				"ck",
				"cl",
				"ch",
				"cn",
				"cm",
				"cv",
				"cz",
				"cx",
				"za",
				"zs",
				"zw",
				"zq",
				"ze",
				"zr",
				"zf",
				"zj",
				"zk",
				"zl",
				"zh",
				"zn",
				"zm",
				"zv",
				"zc",
				"zx",
				"xa",
				"xs",
				"xw",
				"xq",
				"xe",
				"xr",
				"xf",
				"xj",
				"xk",
				"xl",
				"xh",
				"xn",
				"xm",
				"xv",
				"xc",
				"xz",
			},
			highlight_unlabeled_phase_one_targets = true, -- Highlight unlabeled targets
			case_sensitive = false, -- Case-insensitive searching
			special_keys = {
				repeat_search = "<enter>", -- Repeat last search
				next_target = "<enter>", -- Jump to next target
				prev_target = "<backspace>", -- Jump to previous target
				next_group = "<space>", -- Jump to next group
				prev_group = "<tab>", -- Jump to previous group
				eol = "<end>", -- Jump to end of line
			},
		})

		-- Add default mappings
		require("leap").add_default_mappings()

		-- Enhanced keybindings for single keystroke jumps
		vim.keymap.set({ "n", "x", "o" }, "s", function()
			require("leap").leap({ target_windows = { vim.fn.win_getid() } })
		end, { desc = "Leap forward with single keystroke" })

		vim.keymap.set({ "n", "x", "o" }, "S", function()
			require("leap").leap({ target_windows = { vim.fn.win_getid() }, backward = true })
		end, { desc = "Leap backward with single keystroke" })

		-- Configure highlight groups for better visibility
		vim.api.nvim_set_hl(0, "LeapBackdrop", { link = "Comment" }) -- Dim backdrop for better focus
		vim.api.nvim_set_hl(0, "LeapMatch", {
			fg = "white",
			bg = "#4a4a59", -- Slightly darker background for better contrast
			bold = true,
			nocombine = true,
		})
		vim.api.nvim_set_hl(0, "LeapLabelPrimary", {
			fg = "#ff007c", -- Bright pink for primary labels
			bold = true,
			nocombine = true,
		})
		vim.api.nvim_set_hl(0, "LeapLabelSecondary", {
			fg = "#00dfff", -- Bright cyan for secondary labels
			bold = true,
			nocombine = true,
		})
		vim.api.nvim_set_hl(0, "LeapLabelSelected", {
			fg = "#ffffff", -- White for selected labels
			bg = "#ff007c", -- Pink background for selected labels
			bold = true,
			nocombine = true,
		})

		-- Configure highlight groups for better visibility
		vim.api.nvim_set_hl(0, "LeapBackdrop", { link = "Comment" }) -- Dim backdrop
		vim.api.nvim_set_hl(0, "LeapMatch", { fg = "white", bg = "#4a4a59", bold = true, nocombine = true })
		vim.api.nvim_set_hl(0, "LeapLabelPrimary", { fg = "#ff007c", bold = true, nocombine = true })
		vim.api.nvim_set_hl(0, "LeapLabelSecondary", { fg = "#00dfff", bold = true, nocombine = true })
		vim.api.nvim_set_hl(0, "LeapLabelSelected", { fg = "#ffffff", bg = "#ff007c", bold = true, nocombine = true })
	end,
}
